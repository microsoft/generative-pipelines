# Build Docker images and push them to docker hub

name: Dockerize Wikipedia

on:
  schedule:
    - cron: '0 3 * * 1'  # Every Monday at 03:00 UTC

env:
  IMAGE_NAME:   wikipedia                    # ${{ env.IMAGE_NAME }}
  LATEST_TAG:   latest                       # ${{ env.LATEST_TAG }}
  DOCKERCTX:    tools/Wikipedia              # docker build context
  DOCKERFILE:   tools/Wikipedia/Dockerfile   # path to Dockerfile
  CHANGED_PATH: tools/Wikipedia              # path to check for changes

jobs:

  # Decide whether to build or not
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.detect.outputs.changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Detect changes in last 7 days
        id: detect
        run: |
          set -euo pipefail
          git fetch --prune --unshallow origin main
          if git log --since="7 days ago" --pretty=format: --name-only origin/main -- "${{ env.CHANGED_PATH }}" | grep .; then
            echo "Changes detected"
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "No changes"
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

  # Multi-arch build
  multiarch:
    runs-on: ubuntu-latest
    needs: check-changes
    if: needs.check-changes.outputs.changed == 'true'

    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push multi-arch image
        run: |
          set -euo pipefail
          SHORT_SHA="${GITHUB_SHA::8}"

          docker buildx build --push --no-cache --provenance=false \
            --platform linux/amd64,linux/arm64 \
            --tag "${{ vars.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${SHORT_SHA}" \
            --tag "${{ vars.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest" \
            -f "${{ env.DOCKERFILE }}" "${{ env.DOCKERCTX }}"
