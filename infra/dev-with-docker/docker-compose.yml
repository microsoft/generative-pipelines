services:

#####################################
# ORCHESTRATOR
#####################################

  redis-storage:
    image: redis:7.4
    networks: { default: { aliases: [ redisstorage ] } }
    restart: unless-stopped
    ports:
      - "6379:6379"

  azure-storage:
    # https://learn.microsoft.com/azure/storage/common/storage-use-azurite
    image: mcr.microsoft.com/azure-storage/azurite:latest
    command: "azurite --blobHost 0.0.0.0 --blobPort 10000 --queueHost 0.0.0.0 --queuePort 10001 --skipApiVersionCheck"
    networks: { default: { aliases: [ blobstorage, queuestorage ] } }
    ports:
      - "10000:10000"
      - "10001:10001"
    restart: unless-stopped
    volumes:
      - ~/docker-volumes/azurite:/data

  orchestrator:
    image: gptools/orchestrator:latest
    ports:
      - "60000:60000"
    environment:
      - Logging__LogLevel__Default=Debug
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - services__chunker__http__0=http://chunker:4002
      - services__extractor__http__0=http://extractor:4013
      - services__embedding_generator__http__0=http://embedding-generator:5083
      - services__vector_storage_sk__http__0=http://vector-storage-sk:21365
      - services__type-chat__http__0=http://type-chat:3000
      - services__wikipedia__http__0=http://wikipedia:6001
      - ConnectionStrings__redisstorage=redis-storage:6379
      - ConnectionStrings__blobstorage=${ConnectionStrings__blobstorage:-DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://blobstorage:10000/devstoreaccount1;}
      - ConnectionStrings__queuestorage=${ConnectionStrings__queuestorage:-DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;QueueEndpoint=http://queuestorage:10001/devstoreaccount1;}
    depends_on:
      - redis-storage
      - azure-storage

#####################################
# STORAGE
#####################################

  postgres-storage:
    image: docker.io/pgvector/pgvector:pg17
    networks: { default: { aliases: [ postgresstorage ] } }
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - ~/docker-volumes/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256 --auth-local=scram-sha-256
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme}

  qdrant-storage:
    image: qdrant/qdrant:v1.12.1
    networks: { default: { aliases: [ qdrantstorage ] } }
    ports:
      - "6333:6333"
      - "6334:6334"
    restart: unless-stopped
    volumes:
      - ~/docker-volumes/qdrant:/qdrant/storage
    environment:
      - QDRANT__SERVICE__API_KEY=${QDRANT__SERVICE__API_KEY:-changeme}

#####################################
# TOOLS
#####################################

  extractor:
    image: gptools/extractor:latest
    ports:
      - "4013:4013"
    depends_on:
      - redis-storage
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - TOOL_NAME=extractor
      - GenerativePipelines__ToolsRegistryEnabled=${TOOLS_REGISTRY_ENABLED:-true}
      - Logging__LogLevel__Default=Information
      - ConnectionStrings__redisstorage=redis-storage:6379
      - ConnectionStrings__blobstorage=${ConnectionStrings__blobstorage:-DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://blobstorage:10000/devstoreaccount1;}

  chunker:
    image: gptools/chunker:latest
    ports:
      - "4002:4002"
    depends_on:
      - redis-storage
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - TOOL_NAME=chunker
      - GenerativePipelines__ToolsRegistryEnabled=${TOOLS_REGISTRY_ENABLED:-true}
      - Logging__LogLevel__Default=Information
      - ConnectionStrings__redisstorage=redis-storage:6379
      - ConnectionStrings__blobstorage=${ConnectionStrings__blobstorage:-DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://blobstorage:10000/devstoreaccount1;}

  embedding-generator:
    image: gptools/embedding-generator:latest
    ports:
      - "5083:5083"
    depends_on:
      - redis-storage
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - TOOL_NAME=embedding-generator
      - GenerativePipelines__ToolsRegistryEnabled=${TOOLS_REGISTRY_ENABLED:-true}
      - Logging__LogLevel__Default=Information
      - ConnectionStrings__redisstorage=redis-storage:6379
      - ConnectionStrings__blobstorage=${ConnectionStrings__blobstorage:-DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://blobstorage:10000/devstoreaccount1;}
      - App__OpenAI__ApiKey=${OPENAI_API_KEY:-}

  vector-storage-sk:
    image: gptools/vector-storage-sk:latest
    ports:
      - "21365:21365"
    depends_on:
      - redis-storage
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - TOOL_NAME=vector-storage-sk
      - GenerativePipelines__ToolsRegistryEnabled=${TOOLS_REGISTRY_ENABLED:-true}
      - Logging__LogLevel__Default=Debug
      - ConnectionStrings__redisstorage=redis-storage:6379
      - ConnectionStrings__blobstorage=${ConnectionStrings__blobstorage:-DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://blobstorage:10000/devstoreaccount1;}
      - ConnectionStrings__postgresstorage=${ConnectionStrings__postgresstorage:-Host=postgresstorage;Port=5432;Username=postgres;Password=changeme}
      - ConnectionStrings__qdrantstorage=${ConnectionStrings__qdrantstorage:-Endpoint=http://qdrantstorage:6333;Key=changeme}

  type-chat:
    image: gptools/typechat:latest
    ports:
      - "3000:3000"
    depends_on:
      - redis-storage
    environment:
      - PORT=3000
      - NODE_ENV=development
      - TOOL_NAME=type-chat
      - GenerativePipelines__ToolsRegistryEnabled=${TOOLS_REGISTRY_ENABLED:-true}
      - ConnectionStrings__redisstorage=redis-storage:6379
      - ConnectionStrings__blobstorage=${ConnectionStrings__blobstorage:-DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://blobstorage:10000/devstoreaccount1;}

  wikipedia:
    image: gptools/wikipedia:latest
    ports:
      - "6001:6001"
    depends_on:
      - redis-storage
    environment:
      - UVICORN_PORT=6001
      - PYTHONDEBUG=1
      - PYTHON_ENV=development
      - APP_ENV=development
      - LOG_LEVEL=INFO
      - TOOL_NAME=wikipedia
      - GenerativePipelines__ToolsRegistryEnabled=${TOOLS_REGISTRY_ENABLED:-true}
      - ConnectionStrings__redisstorage=redis-storage:6379

#####################################
# DEV
#####################################

  redis-commander:
    image: rediscommander/redis-commander:latest
    platform: linux/amd64
    ports:
      - "8080:8081"
    environment:
      - REDIS_HOSTS=local:redis-storage:6379
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped

#  loki:
#    image: grafana/loki:2.9.1
#    ports:
#      - "3100:3100"
#    command: -config.file=/etc/loki/local-config.yaml
#    volumes:
#      - ~/docker-volumes/etc-loki:/etc/loki

#  promtail:
#    image: grafana/promtail:2.9.1
#    volumes:
#      - ~/docker-volumes/etc-promtail:/etc/promtail
#      - ~/docker-volumes/var-lib-docker-containers:/var/lib/docker/containers:ro
#      - ~/docker-volumes/var-log:/var/log:ro
#      - ~/docker-volumes/etc-machine-id:/etc/machine-id:ro
#      - ~/docker-volumes/run-log-journal:/run/log/journal:ro
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#    command: -config.file=/etc/promtail/promtail-config.yaml

#  grafana:
#    image: grafana/grafana:latest
#    ports:
#      - "13000:3000"
#    volumes:
#      - ~/docker-volumes/var-lib-grafana:/var/lib/grafana
#    depends_on:
#      - loki
#    environment:
#      - GF_AUTH_ANONYMOUS_ENABLED=true
#      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
#      - GF_AUTH_DISABLE_LOGIN_FORM=true

#  yacht:
#    image: selfhostedpro/yacht:latest
#    ports:
#      - "8000:8000"
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    restart: unless-stopped
#    environment:
#      - DISABLE_AUTH=True
